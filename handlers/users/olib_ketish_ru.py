import math
from time import strftime, gmtime

from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import StatesGroup, State

from data.config import ADMINS, group_id
from handlers.users.functions import yaqin_location_fun
from handlers.users.savat import db_tavar
from handlers.users.til import db_user
from keyboards.default.contact import locatsiya_ru
from keyboards.default.menu_ru import olib_ketish_ru, bosh_menu_ru
from loader import dp, bot


class LocoYaqinState_ru(StatesGroup):
    loco = State()


@dp.message_handler(text="üè†–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", state=[LocoYaqinState_ru.loco])
async def locobosh_menu_ru(message: types.Message, state:FSMContext):
    await message.delete()
    await message.answer(f"–ü—Ä–∏–≤–µ—Ç! ", reply_markup=bosh_menu_ru)
    await state.finish()


tavar_dict_naqt_ru = {330:
                          {0: {1: "1.–ö–æ–ª–±–∞—Å–∫–∏ –ì–æ–≤—è–∂—å–∏ - –ë–∞–≤–∞—Ä—Å–∫–∏–µ\n–í —É–ø–∞–∫–æ–≤–∫–µ - 330–≥",
                               2: "2. –ö–æ–ª–±–∞—Å–∫–∏ –ì–æ–≤—è–∂—å–∏ —Å –ó–µ–ª–µ–Ω—å—é - –ì–∞—Ç–ª–∏–Ω–±—É—Ä–≥\n–í —É–ø–∞–∫–æ–≤–∫–µ - 330–≥",
                               3: "3. –ö–æ–ª–±–∞—Å–∫–∏ –ì–æ–≤—è–∂—å–∏ –ü–∏–∫–∞–Ω—Ç–Ω—ã–µ - –ü–µ–ø–µ—Ä–æ–Ω–∏\n–í —É–ø–∞–∫–æ–≤–∫–µ - 330–≥",
                               4: "4. –ö–æ–ª–±–∞—Å–∫–∏ –ö—É—Ä–∏–Ω—ã–µ —Å –°—ã—Ä–æ–º - –•–∞–Ω–∏–∫–µ–Ω\n–í —É–ø–∞–∫–æ–≤–∫–µ - 330–≥",
                               5: "5. –ö–æ–ª–±–∞—Å–∫–∏ –ö—É—Ä–∏–Ω—ã–µ —Å –ó–µ–ª–µ–Ω—å—é - –ë—Ä–∞—Ç–≤—É—Ä—Å—Ç\n–í —É–ø–∞–∫–æ–≤–∫–µ - 330–≥",
                               6: "6. –ö–æ–ª–±–∞—Å–∫–∏ –ö—É—Ä–∏–Ω—ã–µ –ü–∏–∫–∞–Ω—Ç–Ω—ã–µ - –ë–æ–º–±–µ–π\n–í —É–ø–∞–∫–æ–≤–∫–µ - 330–≥"
                               },
                           1: 40000,
                           2: 40000,
                           3: 40000,
                           4: 35000,
                           5: 35000,
                           6: 35000},
                      800:
                          {0: {1: "1. –ê–Ω–≥–ª–∏–π—Å–∫–∞—è –°–µ—Ä–∏—è\n–í —É–ø–∞–∫–æ–≤–∫–µ:\n\n- 400–≥ –ö–æ–ª–±–∞—Å–æ–∫ –ö—É—Ä–∏–Ω—ã—Ö —Å –°—ã—Ä–æ–º\n"
                               "- 400–≥ –ö–æ–ª–±–∞—Å–æ–∫ –ì–æ–≤—è–∂—å–∏—Ö",
                            2: "2. –ò—Ç–∞–ª—å—è–Ω—Å–∫–∞—è –ö–æ–ª–ª–µ–∫—Ü–∏—è\n–í —É–ø–∞–∫–æ–≤–∫–µ:\n\n- 400–≥ –ö–æ–ª–±–∞—Å–æ–∫ –ö—É—Ä–∏–Ω—ã—Ö —Å –ó–µ–ª–µ–Ω—å—é\n"
                               "- 400–≥ –ö–æ–ª–±–∞—Å–æ–∫ –ì–æ–≤—è–∂—å–∏—Ö —Å –ó–µ–ª–µ–Ω—å—é",
                            3: "3. –ú–µ–∫—Å–∏–∫–∞–Ω—Å–∫–∏–π –î—É—ç—Ç\n–í —É–ø–∞–∫–æ–≤–∫–µ:\n\n- 400–≥ –ö–æ–ª–±–∞—Å–æ–∫ –ö—É—Ä–∏–Ω—ã—Ö –û—Å—Ç—Ä—ã—Ö\n"
                               "- 400–≥ –ö–æ–ª–±–∞—Å–æ–∫ –ì–æ–≤—è–∂—å–∏—Ö –û—Å—Ç—Ä—ã—Ö",
                            4: "4. –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∞—è –°–∏–º—Ñ–æ–Ω–∏—è\n–í —É–ø–∞–∫–æ–≤–∫–µ:\n\n- 400–≥ –ö–æ–ª–±–∞—Å–æ–∫ '–ì–æ–≤—è–∂—å–∏ —Å –°—ã—Ä–æ–º'\n"
                               "- 400–≥ –ö–æ–ª–±–∞—Å–æ–∫ '–∏–∑ –ë–∞—Ä–∞–Ω–∏–Ω—ã'"
                            },
                           1: 85000,
                           2: 85000,
                           3: 85000,
                           4: 90000}
                      }


# 1
@dp.message_handler(text=["–ì–æ—Å–ø–∏—Ç–∞–ª—å–Ω—ã–π –†—ã–Ω–æ–∫", "–†—ã–Ω–æ–∫ –ö–∞—Ç–∞—Ä—Ç–∞–ª", "–†—ã–Ω–æ–∫ –ê—Å–∫–∏—è", "–§–∞—Ä—Ö–∞–¥—Å–∫–∏–π –†—ã–Ω–æ–∫",
                          "–ë—É–∑ –ë–∞–∑–∞—Ä", "–†—ã–Ω–æ–∫ –ß–∏–º–≥–∞–Ω", "–†—ã–Ω–æ–∫ –°–µ—Ä–≥–µ–ª–∏ (–î–µ—Ö)", "–†—ã–Ω–æ–∫ –ö–∞–¥—ã—à–µ–≤–∞"])
async def boafsfsa_ru(message: types.Message):
    if message.text == '–ì–æ—Å–ø–∏—Ç–∞–ª—å–Ω—ã–π –†—ã–Ω–æ–∫':
        # 1
        text = f'–†—ã–Ω–æ–∫ –ì–æ—Å–ø–∏—Ç–∞–ª—å–Ω—ã–π. –í—ã–≤–µ—Å–∫–∞ "PROMEAT"\n' \
               f'+998903474655\n\n–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —Ñ–∏–ª–∏–∞–ª:   '
        soat = (int(strftime('%H', gmtime())) + 5) % 24

        if soat >= 8 and soat < 18:
            text += f'<b>–†–∞–±–æ—Ç–∞–µ—Ç</b>  \n–†–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è: 8:00-18:00\n'
        else:
            text += f'<b>–ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç</b>  \n–†–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è:: 8:00-18:00'

        await message.answer(text)
        await message.answer_location(latitude=41.291183, longitude=69.274846)

    if message.text == "–†—ã–Ω–æ–∫ –ö–∞—Ç–∞—Ä—Ç–∞–ª":
        # 2
        text = f'–†—ã–Ω–æ–∫ –ö–∞—Ç–∞—Ä—Ç–∞–ª. –ú–∞–≥–∞–∑–∏–Ω—ã 59, 92. –í—ã–≤–µ—Å–∫–∏ "–ö–ª–∞—Å—Å–Ω—ã–π –ö–æ–ª–±–∞—Å–Ω—ã–π"\n' \
               f'+998903474655\n\n–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —Ñ–∏–ª–∏–∞–ª:   '
        soat = (int(strftime('%H', gmtime())) + 5) % 24

        if soat >= 8 and soat < 18:
            text += f'<b>–†–∞–±–æ—Ç–∞–µ—Ç</b>  \n–†–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è: 8:00-18:00\n'
        else:
            text += f'<b>–ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç</b>  \n–†–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è:: 8:00-18:00'

        await message.answer(text)
        await message.answer_location(latitude=41.291333, longitude=69.210063)

    if message.text == "–†—ã–Ω–æ–∫ –ê—Å–∫–∏—è":
        # 3
        text = f'–†—ã–Ω–æ–∫ –ê—Å–∫–∏—è.  –í—ã–≤–µ—Å–∫–∞ "–ö–æ–ª–±–∞—Å–Ω–∞—è –õ–∞–≤–∫–∞".\n' \
               f'+998903474655\n\n–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —Ñ–∏–ª–∏–∞–ª:   '
        soat = (int(strftime('%H', gmtime())) + 5) % 24

        if soat >= 8 and soat < 18:
            text += f'<b>–†–∞–±–æ—Ç–∞–µ—Ç</b>  \n–†–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è: 8:00-18:00\n'
        else:
            text += f'<b>–ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç</b>  \n–†–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è:: 8:00-18:00'

        await message.answer(text)
        await message.answer_location(latitude=41.283508, longitude=69.250255)

    if message.text == "–§–∞—Ä—Ö–∞–¥—Å–∫–∏–π –†—ã–Ω–æ–∫":
        # 4
        text = f"–§–∞—Ä—Ö–∞–¥—Å–∫–∏–π –†—ã–Ω–æ–∫.\n" \
               f'+998903474655\n\n–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —Ñ–∏–ª–∏–∞–ª:   '
        soat = (int(strftime('%H', gmtime())) + 5) % 24

        if soat >= 8 and soat < 18:
            text += f'<b>–†–∞–±–æ—Ç–∞–µ—Ç</b>  \n–†–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è: 8:00-18:00\n'
        else:
            text += f'<b>–ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç</b>  \n–†–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è:: 8:00-18:00'

        await message.answer(text)
        await message.answer_location(latitude=41.285870, longitude=69.189906)

    if message.text == "–ë—É–∑ –ë–∞–∑–∞—Ä":

        # 5
        text = f"–ë—É–∑ –ë–∞–∑–∞—Ä.\n" \
               f'+998903474655\n\n–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —Ñ–∏–ª–∏–∞–ª:   '
        soat = (int(strftime('%H', gmtime())) + 5) % 24

        if soat >= 8 and soat < 18:
            text += f'<b>–†–∞–±–æ—Ç–∞–µ—Ç</b>  \n–†–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è: 8:00-18:00\n'
        else:
            text += f'<b>–ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç</b>  \n–†–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è:: 8:00-18:00'

        await message.answer(text)
        await message.answer_location(latitude=41.328183, longitude=69.325687)

    if message.text == "–†—ã–Ω–æ–∫ –ß–∏–º–≥–∞–Ω":
        # 6
        text = f"–†—ã–Ω–æ–∫ –ß–∏–º–≥–∞–Ω.\n" \
               f'+998903474655\n\n–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —Ñ–∏–ª–∏–∞–ª:   '
        soat = (int(strftime('%H', gmtime())) + 5) % 24

        if soat >= 8 and soat < 18:
            text += f'<b>–†–∞–±–æ—Ç–∞–µ—Ç</b>  \n–†–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è: 8:00-18:00\n'
        else:
            text += f'<b>–ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç</b>  \n–†–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è:: 8:00-18:00'

        await message.answer(text)
        await message.answer_location(latitude=41.347753, longitude=69.346595)

    if message.text == "–†—ã–Ω–æ–∫ –°–µ—Ä–≥–µ–ª–∏ (–î–µ—Ö)":
        # 7
        text = f"–†—ã–Ω–æ–∫ –°–µ—Ä–≥–µ–ª–∏ (–î–µ—Ö).\n" \
               f'+998903474655\n\n–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —Ñ–∏–ª–∏–∞–ª:   '
        soat = (int(strftime('%H', gmtime())) + 5) % 24

        if soat >= 8 and soat < 18:
            text += f'<b>–†–∞–±–æ—Ç–∞–µ—Ç</b>  \n–†–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è: 8:00-18:00\n'
        else:
            text += f'<b>–ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç</b>  \n–†–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è:: 8:00-18:00'

        await message.answer(text)
        await message.answer_location(latitude=41.226840, longitude=69.218662)

    if message.text == "–†—ã–Ω–æ–∫ –ö–∞–¥—ã—à–µ–≤–∞":
        # 8
        text = f"–†—ã–Ω–æ–∫ –ö–∞–¥—ã—à–µ–≤–∞.\n" \
               f'+998903474655\n\n–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —Ñ–∏–ª–∏–∞–ª:   '
        soat = (int(strftime('%H', gmtime())) + 5) % 24

        if soat >= 8 and soat < 18:
            text += f'<b>–†–∞–±–æ—Ç–∞–µ—Ç</b>  \n–†–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è: 8:00-18:00\n'
        else:
            text += f'<b>–ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç</b>  \n–†–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è:: 8:00-18:00'

        await message.answer(text)
        await message.answer_location(latitude=41.285459, longitude=69.348460)

    try:
        await db_tavar.create()
    except:
        pas = 1

    tavar = await db_tavar.select_Tavar(user_id=str(message.from_user.id))
    await db_tavar.delete_Tavar(user_id=str(message.from_user.id))

    summa = 0

    await db_tavar.disconnect()
    tavar_text = ""
    for i in range(len(tavar)):
        tavar_text = tavar_text + f"üõç{tavar_dict_naqt_ru[int(tavar[i][2])][0][int(tavar[i][3])]}\n" \
                     + f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–¥—É–∫—Ç–∞: {tavar[i][4]}\n" \
                     + f"üíµ–†–∞—Å—Ö–æ–¥—ã: {int(tavar[i][5]) * int(tavar[i][4])}\n\n"

        summa = summa + int(tavar[i][5]) * int(tavar[i][4])
    if summa == 0:
        await message.answer(f"–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —Ä–∞–∑–º–µ—Ä–æ–≤.", reply_markup=bosh_menu_ru)
    else:
        tavar_text = tavar_text + f"üíµ–û–±—â–∞—è —Å—É–º–º–∞ : <b>{summa}</b>\n"

        await message.answer(tavar_text)

        try:
            await db_user.create()
            user = await db_user.select_user(user_id=str(message.from_user.id))

        except:
            user = None
            await bot.send_message(ADMINS[0], f"Xato olib_ketish_ru.py page 206")
        finally:
            await db_user.disconnect()
        name = user[3]
        nomer = user[4]
        soat = str((int(strftime('%H', gmtime())) + 5) % 24) + f":{str(strftime('%M', gmtime()))}"
        vaqt = str(strftime(f"%d/%m/%Y", gmtime()))

        await bot.send_message(group_id, f"<b>üôãüèª‚Äç‚ôÇÔ∏èMijoz :</b> {name}\n"
                                         f"<b>üìïUsername :</b> @{message.from_user.username}\n"
                                         f"<b>üì≤Nomer :</b>  {nomer}\n"
                                         f"<b>‚è±Vaqt :</b> {soat} {vaqt} \n"
                                         f"<b>üì¶olib ketish</b>\n"
                                         f'<b>üìçfilial:  "{message.text}"</b> \n\n'
                                         f"{tavar_text}")

    await message.answer(f"‚úÖ–í–∞—à –∑–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω. \n"
                         f'üìù –í—ã –º–æ–∂–µ—Ç–µ –∑–∞–±—Ä–∞—Ç—å —Å–≤–æ–π –∑–∞–∫–∞–∑ –≤ –æ—Ç–¥–µ–ª–µ–Ω–∏–∏ {message.text}.',  reply_markup=bosh_menu_ru)


@dp.message_handler(text="üìç –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –±–ª–∏–∂–∞–π—à–∏–π —Ñ–∏–ª–∏–∞–ª")
async def location_yaqin_ru(message: types.Message):
    await message.answer(f"–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ", reply_markup=locatsiya_ru)
    await LocoYaqinState_ru.loco.set()


@dp.message_handler(content_types='location', state=LocoYaqinState_ru.loco)
async def loco2_yaqin(message: types.Message, state: FSMContext):
    lat = message.location.latitude
    lon = message.location.longitude
    joy_1 = yaqin_location_fun(lat, lon, 41.291183, 69.274846)

    joy_2 = yaqin_location_fun(lat, lon, 41.291333, 69.210063)

    joy_3 = yaqin_location_fun(lat, lon, 41.283508, 69.250255)

    joy_4 = yaqin_location_fun(lat, lon, 41.285870, 69.189906)

    joy_5 = yaqin_location_fun(lat, lon, 41.328183, 69.325687)

    joy_6 = yaqin_location_fun(lat, lon, 41.347753, 69.346595)

    joy_7 = yaqin_location_fun(lat, lon, 41.226840, 69.218662)

    joy_8 = yaqin_location_fun(lat, lon, 41.285459, 69.348460)

    natija = min(joy_1, joy_2, joy_3, joy_4, joy_5, joy_6, joy_7, joy_8)
    yaqin_loc = ''
    if natija == joy_1:
        yaqin_loc = "Kasalxona bozori"

    if natija == joy_2:
        yaqin_loc = "Qatortol bozori"

    if natija == joy_3:
        yaqin_loc = "–†—ã–Ω–æ–∫ –ê—Å–∫–∏—è"

    if natija == joy_4:
        yaqin_loc = "–§–∞—Ä—Ö–∞–¥—Å–∫–∏–π –†—ã–Ω–æ–∫"

    if natija == joy_5:
        yaqin_loc = "–ë—É–∑ –ë–∞–∑–∞—Ä"

    if natija == joy_6:
        yaqin_loc = "–†—ã–Ω–æ–∫ –ß–∏–º–≥–∞–Ω"

    if natija == joy_7:
        yaqin_loc = "–†—ã–Ω–æ–∫ –°–µ—Ä–≥–µ–ª–∏ (–î–µ—Ö)"

    if natija == joy_8:
        yaqin_loc = "–†—ã–Ω–æ–∫ –ö–∞–¥—ã—à–µ–≤–∞"
    await message.answer(f"–ù–∞—à –±–ª–∏–∂–∞–π—à–∏–π —Ñ–∏–ª–∏–∞–ª –¥–ª—è –≤–∞—Å:\n\n"
                         f"<b>{yaqin_loc}</b>", reply_markup=olib_ketish_ru)

    await state.finish()


# 2
# @dp.message_handler(text="Qatortol bozori")
# async def boafwaewdssfsa(message: types.Message):
#     text = f"Katartal bozori. 59, 92-do'konlar.'Salqin kolbasa' belgilari\n" \
#            f'+998903474655\n\nHozirda filial:   '
#     soat = (int(strftime('%H', gmtime())) + 5) % 24
#
#     if soat >= 8 and soat < 18:
#         text += f'<b>Ishlayapdi</b>  \nish vaqti: 8:00-18:00\n'
#     else:
#         text += f'<b>Ishlamayapdi</b>  \nish vaqti: 8:00-18:00'
#
#     await message.answer(text)
#     await message.answer_location(latitude=41.291333, longitude=69.210063)


# 3
# @dp.message_handler(text="Askiya bozori")
# async def boafwaewdssfsa(message: types.Message):
#     text = f"Askiya bozori.\n" \
#            f'+998903474655\n\nHozirda filial:   '
#     soat = (int(strftime('%H', gmtime())) + 5) % 24
#
#     if soat >= 8 and soat < 18:
#         text += f'<b>Ishlayapdi</b>  \nish vaqti: 8:00-18:00\n'
#     else:
#         text += f'<b>Ishlamayapdi</b>  \nish vaqti: 8:00-18:00'
#
#     await message.answer(text)
#     await message.answer_location(latitude=41.283508, longitude=69.250255)
#

# 4
# @dp.message_handler(text="Farxod bozori")
# async def boafwaewdssfsa(message: types.Message):
#     text = f"Farhod bozori.\n" \
#            f'+998903474655\n\nHozirda filial:   '
#     soat = (int(strftime('%H', gmtime())) + 5) % 24
#
#     if soat >= 8 and soat < 18:
#         text += f'<b>Ishlayapdi</b>  \nish vaqti: 8:00-18:00\n'
#     else:
#         text += f'<b>Ishlamayapdi</b>  \nish vaqti: 8:00-18:00'
#
#     await message.answer(text)
#     await message.answer_location(latitude=41.285870, longitude=69.189906)
#

# 5
# @dp.message_handler(text="Buz bozori")
# async def boafwaewdssfsa(message: types.Message):
#     text = f"Buz bozori.\n" \
#            f'+998903474655\n\nHozirda filial:   '
#     soat = (int(strftime('%H', gmtime())) + 5) % 24
#
#     if soat >= 8 and soat < 18:
#         text += f'<b>Ishlayapdi</b>  \nish vaqti: 8:00-18:00\n'
#     else:
#         text += f'<b>Ishlamayapdi</b>  \nish vaqti: 8:00-18:00'
#
#     await message.answer(text)
#     await message.answer_location(latitude=41.328183, longitude=69.325687)


# 6
# @dp.message_handler(text="Chimgan bozori")
# async def boafwaewdssfsa(message: types.Message):
#     text = f"Chimgan bozori.\n" \
#            f'+998903474655\n\nHozirda filial:   '
#     soat = (int(strftime('%H', gmtime())) + 5) % 24
#
#     if soat >= 8 and soat < 18:
#         text += f'<b>Ishlayapdi</b>  \nish vaqti: 8:00-18:00\n'
#     else:
#         text += f'<b>Ishlamayapdi</b>  \nish vaqti: 8:00-18:00'
#
#     await message.answer(text)
#     await message.answer_location(latitude=41.347753, longitude=69.346595)


# 7
# @dp.message_handler(text="Sergili (Dehqon) bozori")
# async def boafwaewdssfsa(message: types.Message):
#     text = f"Sergeli Dehqon  bozori.\n" \
#            f'+998903474655\n\nHozirda filial:   '
#     soat = (int(strftime('%H', gmtime())) + 5) % 24
#
#     if soat >= 8 and soat < 18:
#         text += f'<b>Ishlayapdi</b>  \nish vaqti: 8:00-18:00\n'
#     else:
#         text += f'<b>Ishlamayapdi</b>  \nish vaqti: 8:00-18:00'
#
#     await message.answer(text)
#     await message.answer_location(latitude=41.226840, longitude=69.218662)


# 8
# @dp.message_handler(text="Qadsheva bozori")
# async def boafwaewdssfsa(message: types.Message):
#     text = f"Qadsheva bozori.\n" \
#            f'+998903474655\n\nHozirda filial:   '
#     soat = (int(strftime('%H', gmtime())) + 5) % 24
#
#     if soat >= 8 and soat < 18:
#         text += f'<b>Ishlayapdi</b>  \nish vaqti: 8:00-18:00\n'
#     else:
#         text += f'<b>Ishlamayapdi</b>  \nish vaqti: 8:00-18:00'
#
#     await message.answer(text)
#     await message.answer_location(latitude=41.285459, longitude=69.348460)



#
# @dp.message_handler(content_types='location')
# async def location_def(message: types.Message):
#     print(1)
#     lat = message.location.latitude
#     lon = message.location.longitude
#     print(lat)
#     print(lon)
#     await message.answer(f"{lat}\n{lon}")
