from aiogram import types
from aiogram.dispatcher import FSMContext

from keyboards.default.menu_ru import bosh_menu_ru, buyutma_ru, tavarlar_ru
from loader import dp
from utils.db_api.tavar_sql import Database_Tavar

db_tavar = Database_Tavar()

tavar_dict_ru = {330:
                     {0: {1: "1.–ö–æ–ª–±–∞—Å–∫–∏ –ì–æ–≤—è–∂—å–∏ - –ë–∞–≤–∞—Ä—Å–∫–∏–µ\n–í —É–ø–∞–∫–æ–≤–∫–µ - 330–≥\n\n40,000 —Å—É–º/—à—Ç",
                          2: "2. –ö–æ–ª–±–∞—Å–∫–∏ –ì–æ–≤—è–∂—å–∏ —Å –ó–µ–ª–µ–Ω—å—é - –ì–∞—Ç–ª–∏–Ω–±—É—Ä–≥\n–í —É–ø–∞–∫–æ–≤–∫–µ - 330–≥\n\n40,000 —Å—É–º/—à—Ç",
                          3: "3. –ö–æ–ª–±–∞—Å–∫–∏ –ì–æ–≤—è–∂—å–∏ –ü–∏–∫–∞–Ω—Ç–Ω—ã–µ - –ü–µ–ø–µ—Ä–æ–Ω–∏\n–í —É–ø–∞–∫–æ–≤–∫–µ - 330–≥\n\n40,000 —Å—É–º/—à—Ç",
                          4: "4. –ö–æ–ª–±–∞—Å–∫–∏ –ö—É—Ä–∏–Ω—ã–µ —Å –°—ã—Ä–æ–º - –•–∞–Ω–∏–∫–µ–Ω\n–í —É–ø–∞–∫–æ–≤–∫–µ - 330–≥\n\n35,000 —Å—É–º/—à—Ç",
                          5: "5. –ö–æ–ª–±–∞—Å–∫–∏ –ö—É—Ä–∏–Ω—ã–µ —Å –ó–µ–ª–µ–Ω—å—é - –ë—Ä–∞—Ç–≤—É—Ä—Å—Ç\n–í —É–ø–∞–∫–æ–≤–∫–µ - 330–≥\n\n35,000 —Å—É–º/—à—Ç",
                          6: "6. –ö–æ–ª–±–∞—Å–∫–∏ –ö—É—Ä–∏–Ω—ã–µ –ü–∏–∫–∞–Ω—Ç–Ω—ã–µ - –ë–æ–º–±–µ–π\n–í —É–ø–∞–∫–æ–≤–∫–µ - 330–≥\n\n35,000 —Å—É–º/—à—Ç"
                          },
                      1: 40000,
                      2: 40000,
                      3: 40000,
                      4: 35000,
                      5: 35000,
                      6: 35000},
                 800:
                     {0: {1: "1. –ê–Ω–≥–ª–∏–π—Å–∫–∞—è –°–µ—Ä–∏—è\n–í —É–ø–∞–∫–æ–≤–∫–µ:\n\n- 400–≥ –ö–æ–ª–±–∞—Å–æ–∫ –ö—É—Ä–∏–Ω—ã—Ö —Å –°—ã—Ä–æ–º\n"
                               "- 400–≥ –ö–æ–ª–±–∞—Å–æ–∫ –ì–æ–≤—è–∂—å–∏—Ö\n\n85,000 —Å—É–º/—à—Ç",
                            2: "2. –ò—Ç–∞–ª—å—è–Ω—Å–∫–∞—è –ö–æ–ª–ª–µ–∫—Ü–∏—è\n–í —É–ø–∞–∫–æ–≤–∫–µ:\n\n- 400–≥ –ö–æ–ª–±–∞—Å–æ–∫ –ö—É—Ä–∏–Ω—ã—Ö —Å –ó–µ–ª–µ–Ω—å—é\n"
                               "- 400–≥ –ö–æ–ª–±–∞—Å–æ–∫ –ì–æ–≤—è–∂—å–∏—Ö —Å –ó–µ–ª–µ–Ω—å—é\n\n85,000 —Å—É–º/—à—Ç",
                            3: "3. –ú–µ–∫—Å–∏–∫–∞–Ω—Å–∫–∏–π –î—É—ç—Ç\n–í —É–ø–∞–∫–æ–≤–∫–µ:\n\n- 400–≥ –ö–æ–ª–±–∞—Å–æ–∫ –ö—É—Ä–∏–Ω—ã—Ö –û—Å—Ç—Ä—ã—Ö\n"
                               "- 400–≥ –ö–æ–ª–±–∞—Å–æ–∫ –ì–æ–≤—è–∂—å–∏—Ö –û—Å—Ç—Ä—ã—Ö\n\n85,000 —Å—É–º/—à—Ç",
                            4: "4. –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∞—è –°–∏–º—Ñ–æ–Ω–∏—è\n–í —É–ø–∞–∫–æ–≤–∫–µ:\n\n- 400–≥ –ö–æ–ª–±–∞—Å–æ–∫ '–ì–æ–≤—è–∂—å–∏ —Å –°—ã—Ä–æ–º'\n"
                               "- 400–≥ –ö–æ–ª–±–∞—Å–æ–∫ '–∏–∑ –ë–∞—Ä–∞–Ω–∏–Ω—ã'\n\n90,000 —Å—É–º/—à—Ç"
                            },
                      1: 85000,
                      2: 85000,
                      3: 85000,
                      4: 90000}
                 }


@dp.message_handler(text="üõí–ö–æ—Ä–∑–∏–Ω–∞")
async def savat1_ru(message: types.Message):
    try:
        await db_tavar.create()
    except:
        pas = 1
    # try:
    #     await db_tavar.create_table_tavar()
    # except:
    #     pas = 1

    user = await db_tavar.select_Tavar(user_id=str(message.from_user.id))

    summa = 0
    for i in range(len(user)):
        await message.answer(f"üõç{tavar_dict_ru[int(user[i][2])][0][int(user[i][3])]}\n\n"
                             f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–¥—É–∫—Ç–∞: {user[i][4]}\n"
                             f"üíµ—Ü–µ–Ω–∞: {int(user[i][5]) * int(user[i][4])}")
        summa = summa + int(user[i][5]) * int(user[i][4])
    await db_tavar.disconnect()
    if summa == 0:
        await message.answer(f"–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —Ä–∞–∑–º–µ—Ä–æ–≤.", reply_markup=bosh_menu_ru)
    else:

        await message.answer(f"üíµ–û–±—â–∞—è —Å—É–º–º–∞ : <b>{summa}</b>\n"
                             f"–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª", reply_markup=buyutma_ru)


@dp.message_handler(text="–î–æ–±–∞–≤–∏—Ç—å –≤ –ö–æ—Ä–∑–∏–Ω—É")
async def dsfsefsf_ru(message: types.Message, state: FSMContext):
    data = await state.get_data()
    gr_ru = data.get("gr_ru")
    if gr_ru == 330:
        nomer_s = data.get("nomer_3_ru")
        buy_soni_s = (data.get("buy_soni_3_ru"))
    else:
        nomer_s = data.get("nomer_8_ru")
        buy_soni_s = (data.get("buy_soni_8_ru"))

    try:
        await db_tavar.create()
    except:
        pas = 1

    # try:
    #     await db_tavar.create_table_tavar()
    # except:
    #     pas = 1

    await db_tavar.add_Tavar(user_id=str(message.from_user.id), t_turi=str(gr_ru), t_nomer=str(nomer_s),
                             t_soni=str(buy_soni_s), t_narxi=str(tavar_dict_ru[gr_ru][nomer_s]))

    user = await db_tavar.select_Tavar(user_id=str(message.from_user.id))

    summa = 0
    await db_tavar.disconnect()
    for i in range(len(user)):
        await message.answer(f"üõç{tavar_dict_ru[int(user[i][2])][0][int(user[i][3])]}\n\n"
                             f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–¥—É–∫—Ç–∞: {user[i][4]}\n"
                             f"üíµ—Ü–µ–Ω–∞: {int(user[i][5]) * int(user[i][4])}")
        summa = summa + int(user[i][5]) * int(user[i][4])
    if summa == 0:
        await message.answer(f"–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —Ä–∞–∑–º–µ—Ä–æ–≤.", reply_markup=bosh_menu_ru)
    else:

        await message.answer(f"üíµ–û–±—â–∞—è —Å—É–º–º–∞ : <b>{summa}</b>\n"
                             f"–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª", reply_markup=buyutma_ru)




@dp.message_handler(text="üîÑ–û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É")
async def savat23_ru(message: types.Message):
    try:
        await db_tavar.create()
    except:
        pas = 1
    await db_tavar.delete_Tavar(user_id=str(message.from_user.id))
    await message.answer(f"–ö–æ—Ä–∑–∏–Ω–∞ –æ—á–∏—â–µ–Ω–∞.", reply_markup=bosh_menu_ru)


@dp.message_handler(text="üìù–î–æ–±–∞–≤–∏—Ç—å –∑–∞–∫–∞–∑")
async def main1_ru(message: types.Message):
    await message.answer(f"–¢–æ–≤–∞—Ä—ã", reply_markup=tavarlar_ru)
